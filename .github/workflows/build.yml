name: Build

on:
  workflow_call:
    inputs:
      project-to-build:
        required: true
        type: string
      project-to-test:
        required: false
        type: string
      test-filter:
        required: false
        type: string
        default: TestCategory!=Integration
      coverage-threshold:
        required: false
        type: number
        default: 100

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Restore packages
        run: dotnet restore

      - name: Build
        run: dotnet build "${{inputs.project-to-build}}" --no-restore --configuration Release /p:BuildNumber=${{ github.run_number }} /p:GITHUB_ACTIONS=true

      - name: Test
        if: inputs.project-to-test != ''
        run: dotnet test "${{inputs.project-to-test}}" --filter "${{inputs.test-filter}}" /p:CollectCoverage=true /p:Threshold=${{inputs.coverage-threshold}} /p:ThresholdType=line /p:ThresholdStat=total /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$GITHUB_WORKSPACE/coverage.xml

      - name: Generate Test Coverage Report
        if: inputs.project-to-test != ''
        uses: danielpalme/ReportGenerator-GitHub-Action@5808021ec4deecb0ab3da051d49b4ce65fcc20af
        with:
          reports: "coverage.xml"
          targetdir: "coveragereport"
          reporttypes: "HtmlInline;Cobertura;Badges" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
          verbosity: "Info"
          tag: "${{ github.run_number }}_${{ github.run_id }}"
          toolpath: "reportgeneratortool"

      - name: Upload Coverage Report Artifact
        if: inputs.project-to-test != ''
        uses: actions/upload-artifact@v3
        with:
          name: CoverageReport
          path: coveragereport